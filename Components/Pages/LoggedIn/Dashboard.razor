@page "/"
@page "/dashboard"
@using GimpiesBlazor.Authentication
@inject ISnackbar Snackbar

<AuthorizeView>
    <Authorized>
        <PageTitle>Dashboard</PageTitle>

        <MudContainer Class="mt-4">
            <MudPaper Elevation="14" Class="p-4" Style="max-width: 650px; margin: auto; padding: 32px;">
                <MudStack Spacing="4">
                    <div style="display: flex; align-items: center; padding: 5px;">
                        <MudImage src="@_profilePicture" Style="width: 100px; height: 100px; border-radius: 50%; object-fit: cover; margin-right: 24px;"/>

                        <MudStack Spacing="2">
                            <MudText Typo="Typo.h4" Color="Color.Primary">
                                Welkom, @_username!
                            </MudText>

                            <MudText Typo="Typo.body1">
                                Dit is het dashboard voor medewerkers van schoenenbedrijf Gimpies!
                            </MudText>
                        </MudStack>
                    </div>
                </MudStack>
            </MudPaper>
        </MudContainer>

    </Authorized>

    <NotAuthorized>
        <Login />
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authStateTask { get; set; } = default!;

    private string? _username;
    private string _profilePicture = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateTask;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            _username = user.Identity.Name;
            _profilePicture = user.FindFirst("ProfilePicture")!.Value + ".png";
        }
    }
}