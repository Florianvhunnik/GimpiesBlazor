@page "/registreren"
@rendermode InteractiveServer
@inject AccountManager AccountManager
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor

@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@using GimpiesBlazor.Data
@using GimpiesBlazor.Handlers
@using GimpiesBlazor.Managers
@using GimpiesBlazor.Models.ViewModels
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Http
@using System.Text.RegularExpressions

<MudPaper Class="pa-10 mx-auto" MaxWidth="400px">
    <MudText Typo="Typo.h5" Align="Align.Center">Gimpies Registreren</MudText>
    <MudForm Model="Model" OnValidSubmit="async () => await RegisterUser()">
        <MudTextField @bind-Value="Model.Username" Label="Gebruikersnaam" Required="true" RequiredError="Vul uw gebruikersnaam in"
                      Validation="@(new Func<string, IEnumerable<string>>(ValidationManager.ValidUsername))" />
        <MudTextField @bind-Value="Model.Email" Label="E-Mail" InputType="InputType.Email" Required="true" RequiredError="Vul uw e-mailadres in"
                      Validation="@(new Func<string, IEnumerable<string>>(ValidationManager.ValidEmail))" />
        <MudTextField @bind-Value="Model.Password" Label="Wachtwoord" InputType="InputType.Password" Required="true" RequiredError="Vul uw wachtwoord in"
                      Validation="@(new Func<string, IEnumerable<string>>(ValidationManager.ValidPassword))" />
        <MudTextField @bind-Value="Model.PasswordRepeat" Label="Bevestig Wachtwoord" InputType="InputType.Password" Required="true" RequiredError="Bevestig uw wachtwoord"
                      Validation="@(new Func<string, IEnumerable<string>>(value => ValidationManager.MatchPassword(Model.Password, value)))" />

        <MudButton Type="Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4" FullWidth="true">Registreren</MudButton>
    </MudForm>

    <MudText Typo="Typo.body2" Align="Align.Center" Class="mt-4">
        Heb je al een account? <MudLink Href="/login" Color="Color.Primary">Inloggen</MudLink>
    </MudText>

    <div class="mb-3 text-center">
        <span class="text-danger">@_notifyMessage</span>
    </div>

    @if (_notifyMessage == null)
    {
        <div>
            Notify is null
        </div>
    }
</MudPaper>

@code {
    [SupplyParameterFromForm]
    public RegisterViewModel Model { get; set; } = new();

    private MarkupString? _notifyMessage;

    private async Task RegisterUser()
    {
        if (string.IsNullOrEmpty(Model.Username) || string.IsNullOrEmpty(Model.Email) || string.IsNullOrEmpty(Model.Password) || string.IsNullOrEmpty(Model.PasswordRepeat))
            _notifyMessage = new MarkupString("Vul alle velden correct in!");
            return;
        if (Model.Password != Model.PasswordRepeat)
            _notifyMessage = new MarkupString("Wachtwoorden komen niet overeen!");
            return;
        if (!Model.Email.Contains("@") || !Model.Email.Contains("."))
            _notifyMessage = new MarkupString("Vul een geldig e-mailadres in!");
            return;

        try
        {
            var account = await AccountManager.GetAccount(Model.Username, Model.Email);

            if (account != null)
            {
                _notifyMessage = new MarkupString(
                    $"Deze gebruikersnaam en / of E-Mail is al in gebruik! (<a href='/login'>Inloggen</a>)");
            }
            else
            {
                await AccountManager.RegisterUserAsync(Model.Username, Model.Email, Model.Password, "user");
                _notifyMessage = new MarkupString(
                    $"Succesvol geregistreerd! (<a href='/login'>Inloggen</a>)");
            }
        }
        catch (InvalidOperationException)
        {
            _notifyMessage = ErrorHandler.AddErrorCode("Er is een fout opgetreden bij het registreren!", ProgramError.DatabaseError);
        }
        catch (Exception)
        {
            _notifyMessage = ErrorHandler.AddErrorCode("Er is een fout opgetreden bij het registreren!", ProgramError.UnknownError);
        }
    }
}
